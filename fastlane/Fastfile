# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Deploy a new version to the Google Play"
  lane :deploy do
    validate_play_store_json_key(
        json_key: ENV['JSON_PATH']
    )
    gradle(task: "test")
    gradle(
        task: 'assembleRelease',
        properties: {
            "android.injected.signing.store.file" => ENV['KEYSTORE_PATH'],
            "android.injected.signing.store.password" => ENV['STORE_PASSWORD'],
            "android.injected.signing.key.alias" => ENV['KEY_ALIAS'],
            "android.injected.signing.key.password" => ENV['KEY_PASSWORD'],
        }
    )
    upload_to_play_store(
        track: 'production',
        apk: ENV['APK_PATH'],
        json_key: ENV['JSON_PATH'],
        skip_upload_aab: true
    )
  end

  desc "Submit a new Internal Test"
  lane :internal do
    validate_play_store_json_key(
        json_key: ENV['JSON_PATH']
    )
    gradle(task: "test")
    gradle(
        task: 'assembleRelease',
        properties: {
            "android.injected.signing.store.file" => ENV['KEYSTORE_PATH'],
            "android.injected.signing.store.password" => ENV['STORE_PASSWORD'],
            "android.injected.signing.key.alias" => ENV['KEY_ALIAS'],
            "android.injected.signing.key.password" => ENV['KEY_PASSWORD'],
        }
    )
    upload_to_play_store(
        track: 'internal',
        apk: ENV['APK_PATH'],
        json_key: ENV['JSON_PATH'],
        skip_upload_aab: true
    )
  end

  desc "Build debug and test APK for screenshots"
  lane :screenshots do
    build_android_app(
      task: 'assemble',
      build_type: 'Debug'
    )
    build_android_app(
      task: 'assemble',
      build_type: 'AndroidTest'
    )
    capture_android_screenshots
    supply
  end

end
